# -*- coding: utf-8 -*-
"""EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UjEGYfxEDszi_F7uUAviuvxLCpRrA_XC
"""

!pip install matplotlib adjustText

!pip install matplotlib --upgrade

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
from  matplotlib import pyplot as plt
import pandas as pd
import seaborn as sns
from adjustText import adjust_text
from statsmodels.tsa.stattools import adfuller 
from scipy import signal

# %matplotlib inline
plt.rcParams['figure.figsize'] = (10, 5)
plt.style.use('ggplot')
plt.rcParams["legend.loc"]='best'

df = pd.read_csv('/content/drive/MyDrive/Tesis/Base de datos/DCOILWTICO2015.csv')
df.drop(df[df['DCOILWTICO'] == '.'].index, inplace = True)
df.dropna(inplace=True)
df['DATE'][1975]

df.drop(df[df['DCOILWTICO'] == '.'].index, inplace = True)
df.dropna(inplace=True)
df['DATE']=pd.to_datetime(df['DATE'], format='%Y-%m-%d')
df = df.set_index('DATE')
df['DCOILWTICO']=df['DCOILWTICO'].astype(float)

df

df['DCOILWTICO'].plot(cmap=plt.get_cmap('cividis'), label='Precio del Petróleo Crudo WTI')
plt.plot(df.stack().idxmin()[0],df['DCOILWTICO'].min(),'o',color='#F52295',label='Valor mínimo')
plt.plot(df.stack().idxmax()[0],df['DCOILWTICO'].max(),'ro',label='Valor maximo')
plt.annotate("{:.2f}".format(df['DCOILWTICO'].max()), (df.stack().idxmax()[0],df['DCOILWTICO'].max()), xytext=(15, 15), textcoords='offset points', fontsize=10, arrowprops=dict(arrowstyle='-|>',color='black'))
plt.annotate("{:.2f}".format(df['DCOILWTICO'].min()), (df.stack().idxmin()[0],df['DCOILWTICO'].min()), xytext=(15, 15), textcoords='offset points',fontsize=10, arrowprops=dict(arrowstyle='-|>',color='black'))
plt.title('Precio del Petróleo Crudo WTI',fontsize=15)
plt.xlabel('Año',fontsize=15)
plt.ylabel('WTI ($/bbl)',fontsize=15)
plt.xlim(df['DCOILWTICO'].index.min(),df['DCOILWTICO'].index.max())
plt.legend()
plt.tight_layout()
plt.savefig('Gráfica de los Datos')
plt.show()

sns.histplot(df['DCOILWTICO'], kde=True,color="#03565E")
plt.title("Histograma del Precio del Petróleo Crudo WTI", fontsize=15) 
plt.xlabel("WTI ($/bbl)",fontsize=15)
plt.ylabel("Frecuencia",fontsize=15)
plt.tight_layout()
plt.savefig('Histograma de los Datos')
plt.show()

sns.boxplot(x=df['DCOILWTICO'], color="#03565E") 
plt.title("Boxplot del Precio del Petróleo Crudo WTI", fontsize=15) 
plt.xlabel("WTI ($/bbl)",fontsize=15)
plt.tight_layout()
plt.savefig('Boxplot de los Datos')
plt.show()

def EDA(df, nombre_fecha, nombre_columna):
  df.drop(df[df[nombre_columna] == '.'].index, inplace = True)
  df.dropna(inplace=True)
  df[nombre_fecha]=pd.to_datetime(df[nombre_fecha], format='%Y-%m-%d')
  df = df.set_index(nombre_fecha)
  df[nombre_columna]=df[nombre_columna].astype(float)
  print('El valor máximo es de {} en la fecha {}:'.format(df[nombre_columna].max(), df.stack().idxmax()[0]))
  print('El valor mínimo es de {} en la fecha {}:'.format(df[nombre_columna].min(), df.stack().idxmin()[0]))
  print('La descripción de los datos es la siguiente:')
  datos=[['Total de Datos', round(df.count()[0])], ['Media',round(df.mean()[0],2)], ['Mediana',round(df.median()[0],2)], 
       ['Desviación Estándar', round(df.std()[0],2)], ['Percentil 25', round(np.percentile(df, 25),2)], 
       ['Percentil 75', round(np.percentile(df, 75),2)], ['Valor máximo', round(df.max()[0],2)], ['Valor mínimo', round(df.min()[0],2)]]
  descripcion=pd.DataFrame(datos, columns=['V.Estadística', 'Valor'])
  print(descripcion.to_markdown(index=False))
  

  print('A continuación se muestra algunas gráficas importantes de los datos.')
  left = [['L1']]
  right = [['R1'], ['R2']]
  mosaic=[[left, right]]
  fig = plt.figure(constrained_layout=True, figsize=(25, 15))
  ax = fig.subplot_mosaic(mosaic)
  ax['L1'].plot(df[nombre_columna], color="#03565E")
  ax['L1'].plot(df.stack().idxmin()[0],df[nombre_columna].min(),'o',color='#F52295',label='Valor mínimo')
  ax['L1'].plot(df.stack().idxmax()[0],df[nombre_columna].max(),'ro',label='Valor máximo')
  ax['L1'].annotate("{:.2f}".format(df[nombre_columna].max()), (df.stack().idxmax()[0],df[nombre_columna].max()), xytext=(15, 15), textcoords='offset points', fontsize=10, arrowprops=dict(arrowstyle='-|>',color='black'))
  ax['L1'].annotate("{:.2f}".format(df[nombre_columna].min()), (df.stack().idxmin()[0],df[nombre_columna].min()), xytext=(15, 15), textcoords='offset points',fontsize=10, arrowprops=dict(arrowstyle='-|>',color='black'))
  ax['L1'].set_title('Precio del Petróleo Crudo WTI',fontsize=15)
  ax['L1'].set_xlabel('Año',fontsize=15)
  ax['L1'].set_ylabel('WTI ($/bbl)',fontsize=15)
  ax['L1'].set_xlim(df[nombre_columna].index.min(),df[nombre_columna].index.max())
  ax['L1'].legend()

  sns.histplot(ax=ax['R1'], data=df[nombre_columna], kde=True,color="#03565E")
  ax['R1'].set_title("Histograma-Precio del Petróleo Crudo WTI", fontsize=15) 
  ax['R1'].set_xlabel("WTI ($/bbl)",fontsize=15)
  ax['R1'].set_ylabel("Frecuencia",fontsize=15)

  sns.boxplot(ax=ax['R2'], x=df[nombre_columna], color="#03565E") 
  ax['R2'].set_title("Boxplot del Precio del Petróleo Crudo WTI", fontsize=15) 
  ax['R2'].set_xlabel("WTI ($/bbl)",fontsize=15)
  plt.tight_layout()
  plt.savefig('Mosaico de los Datos')
  plt.show()

df = pd.read_csv('/content/drive/MyDrive/Tesis/Base de datos/DCOILWTICO2015.csv')
EDA(df,'DATE', 'DCOILWTICO')

def periodograma(df, nombre_fecha, nombre_columna):
  df.drop(df[df[nombre_columna] == '.'].index, inplace = True)
  df.dropna(inplace=True)
  df[nombre_fecha]=pd.to_datetime(df[nombre_fecha], format='%Y-%m-%d')
  df = df.set_index(nombre_fecha)
  df[nombre_columna]=df[nombre_columna].astype(float)

  adf, pvalue, usedlag, nobs, critical_values, icbest = adfuller(df[nombre_columna])
  print('El p-valor de la serie de datos es de {}'.format(round(pvalue,4)))
  if pvalue<0.05: 
    f, Pxx_spec = signal.periodogram(df[nombre_columna], scaling='spectrum') #spectrum equation  np.abs(dft)**2 / N ** 2
  else:
    d1=np.diff(df[nombre_columna])
    adf, pvalue1, usedlag, nobs, critical_values, icbest = adfuller(d1)
    f, Pxx_spec = signal.periodogram(d1, scaling='spectrum') 
    print('El p-valor de la serie con la primera diferencia es de datos es de {}'.format(pvalue1))

  f=np.delete(f,0)
  Pxx_spec=np.delete(Pxx_spec,0)

  n=len(f)
  PeriodD=np.zeros(n)
  PeriodM=np.zeros(n)
  PeriodY=np.zeros(n)
  for i in range(1,n):
    PeriodD[i]=round(1/f[i],2)
    PeriodM[i]=round(PeriodD[i]/30,2)
    PeriodY[i]=round(PeriodM[i]/12,2)

  Max = sorted(range(len(np.sqrt(Pxx_spec))), key=lambda x: np.sqrt(Pxx_spec)[x])[-3:]
  DE=np.zeros(len(Max))
  Frecuencia=np.zeros(len(Max))
  PeriodoD=np.zeros(len(Max))
  PeriodoM=np.zeros(len(Max))
  PeriodoA=np.zeros(len(Max))
  for i in range(len(Max)):
    DE[i]=round(np.sqrt(Pxx_spec[Max[i]]),4)
    Frecuencia[i]=round(f[Max[i]],4)
    PeriodoD[i]=PeriodD[Max[i]]
    PeriodoM[i]=PeriodM[Max[i]]
    PeriodoA[i]=PeriodY[Max[i]]

  VMax= pd.DataFrame({'Densidad Espectral': DE, 'Frecuencia': Frecuencia, 'Periodo (Día)': PeriodoD, 'Periodo (Mes)': PeriodoM, 'Periodo (Año)': PeriodoA})


  print('Las frecuencias con valores más altos se registran en la siguiente tabla')
  print(VMax.to_markdown(index=False))
  print('El periodo estacional de los datos es de {} días'.format(round(PeriodD[Max[2]])))
  p=round(PeriodD[Max[2]])
   
  step=[]
  valSta=[]
  for i in range(1,len(df[nombre_columna])):
    n=(p*i)-1
    if n<len(df[nombre_columna]):
      step1=df.iloc[n].name
      val=df[nombre_columna][n] 
      step.append(step1)
      valSta.append(val)

  fig, (ax1, ax2) = plt.subplots(2,1, figsize=(12,6),constrained_layout=True)
  ax1.semilogy(f, np.sqrt(Pxx_spec), color="#03565E")
  ax1.plot(f[Max[2]], np.sqrt(Pxx_spec)[Max[2]],'ro', label='Valor máximo')
  ax1.plot(f[Max[1]], np.sqrt(Pxx_spec)[Max[1]],'go', label='Múltiplo del Valor máximo')
  ax1.plot(f[Max[0]], np.sqrt(Pxx_spec)[Max[0]],'yo', label='Submúltiplo del Valor máximo')
  ax1.set_title('Periodograma del Petróleo Crudo WTI ')
  ax1.set_xlabel('Frecuencia (Hz)')
  ax1.set_ylabel('Densidad Espectral (dB/Hz)')
  ax1.set_xlim(f.min(),f.max())
  ax1.legend()

  ax2.plot(df[nombre_columna],color="#03565E")
  ax2.plot(step,valSta,'ko', label='Periodo Estacional')
  ax2.set_title('Precio del Petróleo Crudo WTI',fontsize=15)
  ax2.set_xlabel('Año',fontsize=15)
  ax2.set_ylabel('WTI ($/bbl)',fontsize=15)
  ax2.set_xlim(df[nombre_columna].index.min(),df[nombre_columna].index.max())
  ax2.legend()

  plt.savefig('Periodograma')

df = pd.read_csv('/content/drive/MyDrive/Tesis/Base de datos/DCOILWTICO2015.csv')
periodograma(df,'DATE', 'DCOILWTICO')